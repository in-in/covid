@use 'sass:map';
@use 'data' as d;
@use 'config' as *;

$symptoms: '.symptoms';

#{$symptoms} {
	display: grid;
	grid-template-columns: inherit;
	column-gap: inherit;
	text-align: center;

	&_header {
		grid-row: 1;
		grid-column: #{$grid_full};
		margin-block-end: em(50);

		@include breakpoint(s) {
			grid-column: 3 / -3;
		}

		@include breakpoint(m) {
			grid-column: 5 / -5;
		}
	}

	&_figure {
		z-index: 10;
		grid-row: 2;
		grid-column: 2 / -2;
	}

	&_image {
		width: 100%;
		height: auto;
	}
}

:global #{$symptoms}_item {
	@each $index, $item in d.$symptoms {
		&:nth-of-type(#{$index}) {
			#{$symptoms}_marker {
				offset-path: path(map.get($item, path));
			}

			@keyframes :global(curve#{$index}) {
				to {
					stroke-dashoffset: map.get($item, curve);
				}
			}

			@include hover() {
				#{$symptoms}_curve {
					animation-name: (curve#{$index});
				}
				#{$symptoms}_marker {
					animation-direction: map.get($item, move);
				}
			}
		}
	}

	@include hover() {
		#{$symptoms}_name {
			stroke: $color_base_primary;
			stroke-width: 2px;
		}

		#{$symptoms}_marker {
			animation-name: (move);
			animation-duration: 2s;
			animation-timing-function: linear;
			animation-iteration-count: infinite;
			fill: $color_base_primary;
			stroke: $color_base_dark;
			stroke-width: 1;
			r: 0.5em;
		}

		#{$symptoms}_point {
			display: none;
		}

		#{$symptoms}_curve {
			animation-duration: 6s;
			animation-timing-function: linear;
			animation-iteration-count: infinite;
			stroke: $color_base_primary;
			stroke-dasharray: 20;
		}
	}

	@keyframes :global(move) {
		to {
			offset-distance: 100%;
		}
	}
}
